#! /bin/csh -f
#
#  mkgalcube:   make a galaxy cube in FITS format
#
#  
#  needs NEMO

#  parameters, can be changed by the user via the commandline
set run=model1             # identification, and basename for all files
set nbody=1000000          # number of bodies per model
set r0=1                   # turnover radius
set v0=100                 # peak velocity
set re=2                   # exponential scalelength of disk
set rmax=6                 # edge of disk

set pa=90                  # PA of disk on sky (E through N)
set inc=60                 # INC of disk
set beam=0.1               # FWHM of (smaller) beam
set beam2=0.2              # FWHM of (bigger) beam2
set vbeam=0                # FWHM of spectral smoothing beam
set mass2=0.0              # fraction of beam2 (between 0 and 1)
set range=8                # gridding from -range:range 
set vrange=300             # velocity gridding -vrange:vrange
set nsize=128              # number of pixels in gridding (px=py=2*range/nx)
set nvel=128               # number of pixels in velocity

set z0=0.0                 # scaleheight of disk (density)
set z1=0.0                 # scaleheight of disk (velocity) [new model]
set vloss=0.0              # loss in rotation speed at higher latitudes [old model]

set seed=0                 # random seed
set frac=0                 # fraction random motion

set noise=0                # add optional noise to cube
set clip=0                 # clipping level for cube

#  parse the command line arguments (they will then override the above defaults)

foreach a ($*)
  set $a
end

#
if ($?NEMO == 0) then
  echo NEMO has not been loaded in your shell
  exit 1
endif


#  derive some parameters that appear common or logically belong together

set grid_pars=(xrange=-${range}:${range} yrange=-${range}:${range} nx=$nsize ny=$nsize)
set cell=`nemoinp "2*$range/$nsize*60"`
set cen=`nemoinp $nsize/2-0.5`

#  keep a log, in case we call this routine multiple times
echo `date` :: $* >> $run.history

# ================================================================================ START

rm -f $run.* >& /dev/null

echo Creating homogeneous disk with $nbody particles times

#     snapmass - - "mass=exp(-r/$re)" |\
#     snapmass - - "mass="1/r" |\

mkdisk out=- nbody=$nbody seed=$seed z0=$z0,$z1 vloss=$vloss \
       potname=rotcur0 potpars=0,$r0,$v0 mass=1 sign=-1 frac=$frac rmax=$rmax |\
    snapmass - - mass="1/(r+0.001)" |\
    snaprotate - $run.20 "$inc,$pa" yz


echo "Creating the beam"
mkplummer - 1 | snapgrid - $run.p1 $grid_pars
ccdsmooth $run.p1 $run.p1a $beam
ccdsmooth $run.p1 $run.p1b $beam2
ccdmath $run.p1a,$run.p1b $run.beam "(1-$mass2)*%1+$mass2*%2"

echo "Creating a velocity field - method 2"
snapgrid $run.20 $run.30 $grid_pars \
    zrange=-${vrange}:${vrange} nz=$nvel mean=f evar=m
ccdstat $run.30
if ($vbeam == 0) then
  ccdmath $run.30 $run.31 "%1+rang(0,$noise)"
else
  ccdmath $run.30 - "%1+rang(0,$noise)" | ccdsmooth - $run.31 $vbeam z
endif
ccdsmooth $run.31 $run.32.a $beam                                  # twice beam smearing
ccdsmooth $run.31 $run.32.b $beam2
ccdmath $run.32.a,$run.32.b $run.32 "(1-$mass2)*%1+$mass2*%2"
ccdstat $run.32
ccdmom $run.32 $run.33d axis=3 mom=0 clip=$clip
ccdmom $run.32 $run.33v axis=3 mom=1 clip=$clip rngmsk=true
ccdmom $run.32 $run.33s axis=3 mom=2 clip=$clip

ccdmom $run.32 $run.34v axis=3 mom=3  peak=0 clip=$clip  # peak
ccdmom $run.32 $run.35v axis=3 mom=31 peak=0 clip=$clip
ccdmom $run.32 $run.36v axis=3 mom=31 peak=1 clip=$clip  # peak


# export for barolo or so, in decent units (could also use ccdsky)
ccdfits $run.32 $run.fits radecvel=t scale=1/60.0/8,1/60.0/8,1000.0 vsys=1000 crpix=$nsize/2+1,$nsize/2+1,$nvel/2+1 crval=180,40,0


